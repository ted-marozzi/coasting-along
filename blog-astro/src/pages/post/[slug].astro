---
import { useSanityClient } from "@sanity/astro";
import PortableText from "../../components/PortableText.astro";
import BaseLayout from "../../layouts/BaseLayout.astro";
import type { Author, Category, Post } from "../../../../studio/schemas/types";

interface Props {
  post: Omit<Post, "authors" | "categories"> & {
    authors: Array<Author>;
    categories: Array<Category>;
  };
}

export async function getStaticPaths() {
  const posts = await useSanityClient().fetch<Array<Props["post"]>>(`*[_type == "post"]{
    ...,
    authors[]->,
    categories[]->,
  }`);

  return posts.map((post) => {
    return {
      params: {
        slug: post.slug.current,
      },
      props: { post },
    };
  });
}

const props = Astro.props;
---

<BaseLayout
  title={`${props.post.title} | Coasting Along`}
  metaDescription={props.post.metaDescription}
>
  <h1>{props.post.title}</h1>
  {props.post.subheading !== undefined && <strong>{props.post.subheading}</strong>}
  <div>by {props.post.authors.map((author) => author.name).join(" ")}</div>
  <PortableText portableText={props.post.mainImage} />
  <div>{props.post.categories.map((catagory) => catagory.title).join(" ")}</div>
  <div>Published {props.post._updatedAt}</div>
  <PortableText portableText={props.post.body} />
</BaseLayout>
